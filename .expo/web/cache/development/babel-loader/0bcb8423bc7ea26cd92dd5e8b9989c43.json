{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\tubespwl\\\\assets\\\\components\\\\user\\\\listcategories.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport categories from \"../category\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport COLORS from \"../color\";\n\nvar _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    selectedCategoryIndex = _React$useState2[0],\n    setSelectedCategoryIndex = _React$useState2[1];\n\nvar ListCategories = function ListCategories() {\n  return React.createElement(ScrollView, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    contentContainerStyle: style.categoriesListContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, categories.map(function (category, index) {\n    return React.createElement(TouchableOpacity, {\n      key: index,\n      activeOpacity: 0.8,\n      onPress: function onPress() {\n        return setSelectedCategoryIndex(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: _objectSpread({\n        width: 120,\n        marginRight: 10,\n        borderRadius: 30,\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: \"center\",\n        height: 35,\n        backgroundColor: selectedCategoryIndex == index ? COLORS.primary : COLORS.secondary\n      }, style.categoryBtn),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 15,\n        fontWeight: 'bold',\n        padding: 15,\n        color: selectedCategoryIndex == index ? COLORS.white : COLORS.primary\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, category.name)));\n  }));\n};\n\nvar style = StyleSheet.create({\n  categoriesListContainer: {\n    backgroundColor: COLORS.white,\n    height: 40,\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'left',\n    width: '100%',\n    marginBottom: 20\n  }\n});\nexport default ListCategories;","map":{"version":3,"sources":["C:/Users/User/tubespwl/assets/components/user/listcategories.js"],"names":["React","categories","COLORS","useState","selectedCategoryIndex","setSelectedCategoryIndex","ListCategories","style","categoriesListContainer","map","category","index","width","marginRight","borderRadius","flex","flexDirection","justifyContent","height","backgroundColor","primary","secondary","categoryBtn","fontSize","fontWeight","padding","color","white","name","StyleSheet","create","marginBottom"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP;;;;;;AAEA,OAAOC,MAAP;;AAEA,sBAA0DF,KAAK,CAACG,QAAN,CAAe,CAAf,CAA1D;AAAA;AAAA,IAAOC,qBAAP;AAAA,IAA8BC,wBAA9B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,SACA,oBAAC,UAAD;AACI,IAAA,UAAU,MADd;AAEI,IAAA,8BAA8B,EAAE,KAFpC;AAGI,IAAA,qBAAqB,EAAEC,KAAK,CAACC,uBAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKP,UAAU,CAACQ,GAAX,CAAe,UAACC,QAAD,EAAWC,KAAX;AAAA,WAChB,oBAAC,gBAAD;AACA,MAAA,GAAG,EAAEA,KADL;AAEA,MAAA,aAAa,EAAE,GAFf;AAGA,MAAA,OAAO,EAAE;AAAA,eAAMN,wBAAwB,CAACM,KAAD,CAA9B;AAAA,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIA,oBAAC,IAAD;AACA,MAAA,KAAK;AAAGC,QAAAA,KAAK,EAAE,GAAV;AAAeC,QAAAA,WAAW,EAAE,EAA5B;AAAgCC,QAAAA,YAAY,EAAE,EAA9C;AAAkDC,QAAAA,IAAI,EAAE,CAAxD;AAA2DC,QAAAA,aAAa,EAAE,QAA1E;AAAoFC,QAAAA,cAAc,EAAE,QAApG;AAA8GC,QAAAA,MAAM,EAAE,EAAtH;AACLC,QAAAA,eAAe,EACXf,qBAAqB,IAAIO,KAAzB,GACET,MAAM,CAACkB,OADT,GAEElB,MAAM,CAACmB;AAJR,SAKFd,KAAK,CAACe,WALJ,CADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQA,oBAAC,IAAD;AACA,MAAA,KAAK,EAAE;AACHC,QAAAA,QAAQ,EAAE,EADP;AAEHC,QAAAA,UAAU,EAAE,MAFT;AAGHC,QAAAA,OAAO,EAAE,EAHN;AAIHC,QAAAA,KAAK,EACLtB,qBAAqB,IAAIO,KAAzB,GACMT,MAAM,CAACyB,KADb,GAEMzB,MAAM,CAACkB;AAPV,OADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUCV,QAAQ,CAACkB,IAVV,CARA,CAJA,CADgB;AAAA,GAAf,CAJL,CADA;AAmCH,CApCD;;AAsCA,IAAMrB,KAAK,GAAGsB,UAAU,CAACC,MAAX,CAAkB;AAC5BtB,EAAAA,uBAAuB,EAAE;AACrBW,IAAAA,eAAe,EAAEjB,MAAM,CAACyB,KADH;AAErBT,IAAAA,MAAM,EAAE,EAFa;AAGrBH,IAAAA,IAAI,EAAE,CAHe;AAIrBC,IAAAA,aAAa,EAAE,KAJM;AAKrBC,IAAAA,cAAc,EAAE,MALK;AAMrBL,IAAAA,KAAK,EAAE,MANc;AAOrBmB,IAAAA,YAAY,EAAE;AAPO;AADG,CAAlB,CAAd;AAYA,eAAezB,cAAf","sourcesContent":["import React from 'react';\r\nimport categories from '../category';\r\nimport {View, TouchableOpacity, StyleSheet, ScrollView, Text} from 'react-native';\r\nimport COLORS from '../color';\r\n\r\nconst [selectedCategoryIndex, setSelectedCategoryIndex] = React.useState(0);\r\n\r\nconst ListCategories = () => {\r\n    return (\r\n    <ScrollView\r\n        horizontal\r\n        showsHorizontalScrollIndicator={false}\r\n        contentContainerStyle={style.categoriesListContainer}>\r\n        {categories.map((category, index) => (\r\n        <TouchableOpacity\r\n        key={index}\r\n        activeOpacity={0.8}\r\n        onPress={() => setSelectedCategoryIndex(index)}>\r\n        <View\r\n        style={{width: 120, marginRight: 10, borderRadius: 30, flex: 1, flexDirection: 'column', justifyContent: \"center\", height: 35,\r\n        backgroundColor:\r\n            selectedCategoryIndex == index\r\n            ? COLORS.primary\r\n            : COLORS.secondary,\r\n        ...style.categoryBtn,\r\n        }}>\r\n        <Text\r\n        style={{\r\n            fontSize: 15,\r\n            fontWeight: 'bold',\r\n            padding: 15,\r\n            color:\r\n            selectedCategoryIndex == index\r\n                ? COLORS.white\r\n                : COLORS.primary,\r\n        }}>\r\n        {category.name}\r\n        </Text>\r\n        </View>\r\n        </TouchableOpacity>\r\n        ))}\r\n    </ScrollView>\r\n);\r\n};\r\n\r\nconst style = StyleSheet.create({\r\n    categoriesListContainer: {\r\n        backgroundColor: COLORS.white,\r\n        height: 40,\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'left',\r\n        width: '100%',\r\n        marginBottom: 20,\r\n    },\r\n})\r\n\r\nexport default ListCategories;"]},"metadata":{},"sourceType":"module"}